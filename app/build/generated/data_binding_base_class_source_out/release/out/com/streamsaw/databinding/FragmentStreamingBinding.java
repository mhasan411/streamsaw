// Generated by data binding compiler. Do not edit!
package com.streamsaw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.chivorn.smartmaterialspinner.SmartMaterialSpinner;
import com.streamsaw.R;
import java.lang.Deprecated;
import java.lang.Object;
import me.relex.circleindicator.CircleIndicator2;

public abstract class FragmentStreamingBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final RelativeLayout filterBtn;

  @NonNull
  public final RelativeLayout filterBtnFavorite;

  @NonNull
  public final CircleIndicator2 indicator;

  @NonNull
  public final TextView linearFavorite;

  @NonNull
  public final ImageView linearFavoriteImage2;

  @NonNull
  public final LinearLayout linearWatch;

  @NonNull
  public final TextView linearWatch2;

  @NonNull
  public final ImageView linearWatchImage;

  @NonNull
  public final ImageView linearWatchImage2;

  @NonNull
  public final LinearLayout noMoviesFound;

  @NonNull
  public final TextView noResults;

  @NonNull
  public final LinearLayout noResultsList;

  @NonNull
  public final SmartMaterialSpinner planetsSpinner;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RecyclerView rvFavoriteStreamning;

  @NonNull
  public final RecyclerView rvFeatured;

  @NonNull
  public final RecyclerView rvLatestStreaming;

  @NonNull
  public final RecyclerView rvMostWatchedStreamning;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TextView selectedGenre;

  protected FragmentStreamingBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintLayout, RelativeLayout filterBtn, RelativeLayout filterBtnFavorite,
      CircleIndicator2 indicator, TextView linearFavorite, ImageView linearFavoriteImage2,
      LinearLayout linearWatch, TextView linearWatch2, ImageView linearWatchImage,
      ImageView linearWatchImage2, LinearLayout noMoviesFound, TextView noResults,
      LinearLayout noResultsList, SmartMaterialSpinner planetsSpinner, ProgressBar progressBar,
      RecyclerView recyclerView, RecyclerView rvFavoriteStreamning, RecyclerView rvFeatured,
      RecyclerView rvLatestStreaming, RecyclerView rvMostWatchedStreamning,
      NestedScrollView scrollView, TextView selectedGenre) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintLayout = constraintLayout;
    this.filterBtn = filterBtn;
    this.filterBtnFavorite = filterBtnFavorite;
    this.indicator = indicator;
    this.linearFavorite = linearFavorite;
    this.linearFavoriteImage2 = linearFavoriteImage2;
    this.linearWatch = linearWatch;
    this.linearWatch2 = linearWatch2;
    this.linearWatchImage = linearWatchImage;
    this.linearWatchImage2 = linearWatchImage2;
    this.noMoviesFound = noMoviesFound;
    this.noResults = noResults;
    this.noResultsList = noResultsList;
    this.planetsSpinner = planetsSpinner;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.rvFavoriteStreamning = rvFavoriteStreamning;
    this.rvFeatured = rvFeatured;
    this.rvLatestStreaming = rvLatestStreaming;
    this.rvMostWatchedStreamning = rvMostWatchedStreamning;
    this.scrollView = scrollView;
    this.selectedGenre = selectedGenre;
  }

  @NonNull
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_streaming, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentStreamingBinding>inflateInternal(inflater, R.layout.fragment_streaming, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_streaming, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentStreamingBinding>inflateInternal(inflater, R.layout.fragment_streaming, null, false, component);
  }

  public static FragmentStreamingBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentStreamingBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentStreamingBinding)bind(component, view, R.layout.fragment_streaming);
  }
}
