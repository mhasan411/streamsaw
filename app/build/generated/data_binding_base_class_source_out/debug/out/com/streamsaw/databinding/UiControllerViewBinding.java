// Generated by data binding compiler. Do not edit!
package com.streamsaw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.mediarouter.app.MediaRouteButton;
import com.streamsaw.R;
import com.streamsaw.ui.player.bindings.PlayerController;
import com.streamsaw.ui.player.views.PlayStateImageButton;
import com.streamsaw.ui.player.views.SubstitleImageButton;
import com.tubitv.ui.TubiLoadingView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class UiControllerViewBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout controllerPanel;

  @NonNull
  public final ImageView exoArtwork;

  @NonNull
  public final ImageView imageViewMovieNext;

  @NonNull
  public final FrameLayout mainNavHostFragment;

  @NonNull
  public final MediaRouteButton mediaRouteButton;

  @NonNull
  public final FrameLayout nextPlayFramelayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textViewVideoTimeRemaining;

  @NonNull
  public final Guideline tubiTvControllerGuidelineBottom;

  @NonNull
  public final Guideline tubiTvControllerGuidelineLeft;

  @NonNull
  public final Guideline tubiTvControllerGuidelineRight;

  @NonNull
  public final Guideline tubiTvControllerGuidelineSeekLeft;

  @NonNull
  public final Guideline tubiTvControllerGuidelineSeekRight;

  @NonNull
  public final Guideline tubiTvControllerGuidelineTop;

  @NonNull
  public final LinearLayout viewAddMyList;

  @NonNull
  public final LinearLayout viewAudioVideoSubs;

  @NonNull
  public final LinearLayout viewEpisodes;

  @NonNull
  public final LinearLayout viewEpisodesAnimes;

  @NonNull
  public final TextView viewIslive;

  @NonNull
  public final LinearLayout viewMoviesList;

  @NonNull
  public final LinearLayout viewNextEpisode;

  @NonNull
  public final LinearLayout viewNextEpisodeAnimes;

  @NonNull
  public final LinearLayout viewStreaming;

  @NonNull
  public final TextView viewTextAddMylistSream;

  @NonNull
  public final ImageView viewTubiControllerAppSettings;

  @NonNull
  public final ImageButton viewTubiControllerClose;

  @NonNull
  public final TextView viewTubiControllerElapsedTime;

  @NonNull
  public final ImageButton viewTubiControllerEpisodes;

  @NonNull
  public final ImageButton viewTubiControllerEpisodesAnimes;

  @NonNull
  public final TextView viewTubiControllerEpisodesText;

  @NonNull
  public final TextView viewTubiControllerEpisodesTextAnimes;

  @NonNull
  public final ImageButton viewTubiControllerForwardIb;

  @NonNull
  public final TubiLoadingView viewTubiControllerLoading;

  @NonNull
  public final ImageView viewTubiControllerMediaTvAudio;

  @NonNull
  public final PlayStateImageButton viewTubiControllerPlayToggleIb;

  @NonNull
  public final TextView viewTubiControllerRemainingTime;

  @NonNull
  public final ImageButton viewTubiControllerRewindIb;

  @NonNull
  public final ImageView viewTubiControllerScaleIb;

  @NonNull
  public final SeekBar viewTubiControllerSeekBar;

  @NonNull
  public final ImageButton viewTubiControllerStreaming;

  @NonNull
  public final TextView viewTubiControllerStreamingText;

  @NonNull
  public final TextView viewTubiControllerSubstitleCurentLang;

  @NonNull
  public final ImageButton viewTubiControllerSubstitlesIcon;

  @NonNull
  public final SubstitleImageButton viewTubiControllerSubtitlesIb;

  @NonNull
  public final ImageButton viewTubiControllerSubtitlesIbIb;

  @NonNull
  public final TextView viewTubiControllerTitle;

  @NonNull
  public final ImageView viewTubiControllerVideoIb;

  @NonNull
  public final ImageView viewTubiControllerVideoSubstitleDialog;

  @Bindable
  protected PlayerController mController;

  protected UiControllerViewBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout controllerPanel, ImageView exoArtwork, ImageView imageViewMovieNext,
      FrameLayout mainNavHostFragment, MediaRouteButton mediaRouteButton,
      FrameLayout nextPlayFramelayout, ProgressBar progressBar, TextView textViewVideoTimeRemaining,
      Guideline tubiTvControllerGuidelineBottom, Guideline tubiTvControllerGuidelineLeft,
      Guideline tubiTvControllerGuidelineRight, Guideline tubiTvControllerGuidelineSeekLeft,
      Guideline tubiTvControllerGuidelineSeekRight, Guideline tubiTvControllerGuidelineTop,
      LinearLayout viewAddMyList, LinearLayout viewAudioVideoSubs, LinearLayout viewEpisodes,
      LinearLayout viewEpisodesAnimes, TextView viewIslive, LinearLayout viewMoviesList,
      LinearLayout viewNextEpisode, LinearLayout viewNextEpisodeAnimes, LinearLayout viewStreaming,
      TextView viewTextAddMylistSream, ImageView viewTubiControllerAppSettings,
      ImageButton viewTubiControllerClose, TextView viewTubiControllerElapsedTime,
      ImageButton viewTubiControllerEpisodes, ImageButton viewTubiControllerEpisodesAnimes,
      TextView viewTubiControllerEpisodesText, TextView viewTubiControllerEpisodesTextAnimes,
      ImageButton viewTubiControllerForwardIb, TubiLoadingView viewTubiControllerLoading,
      ImageView viewTubiControllerMediaTvAudio, PlayStateImageButton viewTubiControllerPlayToggleIb,
      TextView viewTubiControllerRemainingTime, ImageButton viewTubiControllerRewindIb,
      ImageView viewTubiControllerScaleIb, SeekBar viewTubiControllerSeekBar,
      ImageButton viewTubiControllerStreaming, TextView viewTubiControllerStreamingText,
      TextView viewTubiControllerSubstitleCurentLang, ImageButton viewTubiControllerSubstitlesIcon,
      SubstitleImageButton viewTubiControllerSubtitlesIb,
      ImageButton viewTubiControllerSubtitlesIbIb, TextView viewTubiControllerTitle,
      ImageView viewTubiControllerVideoIb, ImageView viewTubiControllerVideoSubstitleDialog) {
    super(_bindingComponent, _root, _localFieldCount);
    this.controllerPanel = controllerPanel;
    this.exoArtwork = exoArtwork;
    this.imageViewMovieNext = imageViewMovieNext;
    this.mainNavHostFragment = mainNavHostFragment;
    this.mediaRouteButton = mediaRouteButton;
    this.nextPlayFramelayout = nextPlayFramelayout;
    this.progressBar = progressBar;
    this.textViewVideoTimeRemaining = textViewVideoTimeRemaining;
    this.tubiTvControllerGuidelineBottom = tubiTvControllerGuidelineBottom;
    this.tubiTvControllerGuidelineLeft = tubiTvControllerGuidelineLeft;
    this.tubiTvControllerGuidelineRight = tubiTvControllerGuidelineRight;
    this.tubiTvControllerGuidelineSeekLeft = tubiTvControllerGuidelineSeekLeft;
    this.tubiTvControllerGuidelineSeekRight = tubiTvControllerGuidelineSeekRight;
    this.tubiTvControllerGuidelineTop = tubiTvControllerGuidelineTop;
    this.viewAddMyList = viewAddMyList;
    this.viewAudioVideoSubs = viewAudioVideoSubs;
    this.viewEpisodes = viewEpisodes;
    this.viewEpisodesAnimes = viewEpisodesAnimes;
    this.viewIslive = viewIslive;
    this.viewMoviesList = viewMoviesList;
    this.viewNextEpisode = viewNextEpisode;
    this.viewNextEpisodeAnimes = viewNextEpisodeAnimes;
    this.viewStreaming = viewStreaming;
    this.viewTextAddMylistSream = viewTextAddMylistSream;
    this.viewTubiControllerAppSettings = viewTubiControllerAppSettings;
    this.viewTubiControllerClose = viewTubiControllerClose;
    this.viewTubiControllerElapsedTime = viewTubiControllerElapsedTime;
    this.viewTubiControllerEpisodes = viewTubiControllerEpisodes;
    this.viewTubiControllerEpisodesAnimes = viewTubiControllerEpisodesAnimes;
    this.viewTubiControllerEpisodesText = viewTubiControllerEpisodesText;
    this.viewTubiControllerEpisodesTextAnimes = viewTubiControllerEpisodesTextAnimes;
    this.viewTubiControllerForwardIb = viewTubiControllerForwardIb;
    this.viewTubiControllerLoading = viewTubiControllerLoading;
    this.viewTubiControllerMediaTvAudio = viewTubiControllerMediaTvAudio;
    this.viewTubiControllerPlayToggleIb = viewTubiControllerPlayToggleIb;
    this.viewTubiControllerRemainingTime = viewTubiControllerRemainingTime;
    this.viewTubiControllerRewindIb = viewTubiControllerRewindIb;
    this.viewTubiControllerScaleIb = viewTubiControllerScaleIb;
    this.viewTubiControllerSeekBar = viewTubiControllerSeekBar;
    this.viewTubiControllerStreaming = viewTubiControllerStreaming;
    this.viewTubiControllerStreamingText = viewTubiControllerStreamingText;
    this.viewTubiControllerSubstitleCurentLang = viewTubiControllerSubstitleCurentLang;
    this.viewTubiControllerSubstitlesIcon = viewTubiControllerSubstitlesIcon;
    this.viewTubiControllerSubtitlesIb = viewTubiControllerSubtitlesIb;
    this.viewTubiControllerSubtitlesIbIb = viewTubiControllerSubtitlesIbIb;
    this.viewTubiControllerTitle = viewTubiControllerTitle;
    this.viewTubiControllerVideoIb = viewTubiControllerVideoIb;
    this.viewTubiControllerVideoSubstitleDialog = viewTubiControllerVideoSubstitleDialog;
  }

  public abstract void setController(@Nullable PlayerController controller);

  @Nullable
  public PlayerController getController() {
    return mController;
  }

  @NonNull
  public static UiControllerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ui_controller_view, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static UiControllerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<UiControllerViewBinding>inflateInternal(inflater, R.layout.ui_controller_view, root, attachToRoot, component);
  }

  @NonNull
  public static UiControllerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.ui_controller_view, null, false, component)
   */
  @NonNull
  @Deprecated
  public static UiControllerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<UiControllerViewBinding>inflateInternal(inflater, R.layout.ui_controller_view, null, false, component);
  }

  public static UiControllerViewBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static UiControllerViewBinding bind(@NonNull View view, @Nullable Object component) {
    return (UiControllerViewBinding)bind(component, view, R.layout.ui_controller_view);
  }
}
