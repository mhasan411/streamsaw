// Generated by data binding compiler. Do not edit!
package com.streamsaw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.chivorn.smartmaterialspinner.SmartMaterialSpinner;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.streamsaw.R;
import com.streamsaw.util.WishListIconView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemAnimeDetailBinding extends ViewDataBinding {
  @NonNull
  public final Button ButtonPlayTrailer;

  @NonNull
  public final ImageView MovieCover;

  @NonNull
  public final LinearLayout RecycleViewTrailerLayout;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView backbutton;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final WishListIconView favoriteIcon;

  @NonNull
  public final LinearLayout lytNotFound;

  @NonNull
  public final TextView mgenres;

  @NonNull
  public final TextView mrelease;

  @NonNull
  public final TextView mseason;

  @NonNull
  public final CoordinatorLayout myCoordinatorLayout;

  @NonNull
  public final SmartMaterialSpinner planetsSpinner;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RecyclerView recyclerViewEpisodes;

  @NonNull
  public final ImageView report;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TextView seasonCurrent;

  @NonNull
  public final TextView serieOverview;

  @NonNull
  public final TextView serieTitle;

  @NonNull
  public final ImageView shareIcon;

  @NonNull
  public final Toolbar toolbar;

  protected ItemAnimeDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button ButtonPlayTrailer, ImageView MovieCover, LinearLayout RecycleViewTrailerLayout,
      AppBarLayout appBarLayout, ImageView backbutton, CollapsingToolbarLayout collapsingToolbar,
      WishListIconView favoriteIcon, LinearLayout lytNotFound, TextView mgenres, TextView mrelease,
      TextView mseason, CoordinatorLayout myCoordinatorLayout, SmartMaterialSpinner planetsSpinner,
      ProgressBar progressBar, RatingBar ratingBar, RecyclerView recyclerViewEpisodes,
      ImageView report, NestedScrollView scrollView, TextView seasonCurrent, TextView serieOverview,
      TextView serieTitle, ImageView shareIcon, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ButtonPlayTrailer = ButtonPlayTrailer;
    this.MovieCover = MovieCover;
    this.RecycleViewTrailerLayout = RecycleViewTrailerLayout;
    this.appBarLayout = appBarLayout;
    this.backbutton = backbutton;
    this.collapsingToolbar = collapsingToolbar;
    this.favoriteIcon = favoriteIcon;
    this.lytNotFound = lytNotFound;
    this.mgenres = mgenres;
    this.mrelease = mrelease;
    this.mseason = mseason;
    this.myCoordinatorLayout = myCoordinatorLayout;
    this.planetsSpinner = planetsSpinner;
    this.progressBar = progressBar;
    this.ratingBar = ratingBar;
    this.recyclerViewEpisodes = recyclerViewEpisodes;
    this.report = report;
    this.scrollView = scrollView;
    this.seasonCurrent = seasonCurrent;
    this.serieOverview = serieOverview;
    this.serieTitle = serieTitle;
    this.shareIcon = shareIcon;
    this.toolbar = toolbar;
  }

  @NonNull
  public static ItemAnimeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_anime_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemAnimeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemAnimeDetailBinding>inflateInternal(inflater, R.layout.item_anime_detail, root, attachToRoot, component);
  }

  @NonNull
  public static ItemAnimeDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_anime_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemAnimeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemAnimeDetailBinding>inflateInternal(inflater, R.layout.item_anime_detail, null, false, component);
  }

  public static ItemAnimeDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemAnimeDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemAnimeDetailBinding)bind(component, view, R.layout.item_anime_detail);
  }
}
