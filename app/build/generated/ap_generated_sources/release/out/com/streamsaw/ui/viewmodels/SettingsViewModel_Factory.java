// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.viewmodels;

import com.streamsaw.data.repository.SettingsRepository;
import com.streamsaw.ui.manager.SettingsManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsViewModel_Factory implements Factory<SettingsViewModel> {
  private final Provider<SettingsRepository> settingsRepositoryProvider;

  private final Provider<SettingsManager> settingsManagerProvider;

  public SettingsViewModel_Factory(Provider<SettingsRepository> settingsRepositoryProvider,
      Provider<SettingsManager> settingsManagerProvider) {
    this.settingsRepositoryProvider = settingsRepositoryProvider;
    this.settingsManagerProvider = settingsManagerProvider;
  }

  @Override
  public SettingsViewModel get() {
    SettingsViewModel instance = newInstance(settingsRepositoryProvider.get());
    SettingsViewModel_MembersInjector.injectSettingsManager(instance, settingsManagerProvider.get());
    return instance;
  }

  public static SettingsViewModel_Factory create(
      Provider<SettingsRepository> settingsRepositoryProvider,
      Provider<SettingsManager> settingsManagerProvider) {
    return new SettingsViewModel_Factory(settingsRepositoryProvider, settingsManagerProvider);
  }

  public static SettingsViewModel newInstance(SettingsRepository settingsRepository) {
    return new SettingsViewModel(settingsRepository);
  }
}
