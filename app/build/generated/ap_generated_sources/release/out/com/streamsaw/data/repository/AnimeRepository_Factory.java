// Generated by Dagger (https://dagger.dev).
package com.streamsaw.data.repository;

import com.streamsaw.data.local.dao.FavoriteDao;
import com.streamsaw.data.remote.ApiInterface;
import com.streamsaw.ui.manager.SettingsManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AnimeRepository_Factory implements Factory<AnimeRepository> {
  private final Provider<ApiInterface> requestMainApiProvider;

  private final Provider<FavoriteDao> favoriteDaoProvider;

  private final Provider<SettingsManager> settingsManagerProvider;

  public AnimeRepository_Factory(Provider<ApiInterface> requestMainApiProvider,
      Provider<FavoriteDao> favoriteDaoProvider,
      Provider<SettingsManager> settingsManagerProvider) {
    this.requestMainApiProvider = requestMainApiProvider;
    this.favoriteDaoProvider = favoriteDaoProvider;
    this.settingsManagerProvider = settingsManagerProvider;
  }

  @Override
  public AnimeRepository get() {
    AnimeRepository instance = newInstance(requestMainApiProvider.get(), favoriteDaoProvider.get());
    AnimeRepository_MembersInjector.injectSettingsManager(instance, settingsManagerProvider.get());
    return instance;
  }

  public static AnimeRepository_Factory create(Provider<ApiInterface> requestMainApiProvider,
      Provider<FavoriteDao> favoriteDaoProvider,
      Provider<SettingsManager> settingsManagerProvider) {
    return new AnimeRepository_Factory(requestMainApiProvider, favoriteDaoProvider, settingsManagerProvider);
  }

  public static AnimeRepository newInstance(ApiInterface requestMainApi, FavoriteDao favoriteDao) {
    return new AnimeRepository(requestMainApi, favoriteDao);
  }
}
