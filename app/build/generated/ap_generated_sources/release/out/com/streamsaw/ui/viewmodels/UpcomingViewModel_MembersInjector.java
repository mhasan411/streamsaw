// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.viewmodels;

import com.streamsaw.data.remote.ApiInterface;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Named;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UpcomingViewModel_MembersInjector implements MembersInjector<UpcomingViewModel> {
  private final Provider<ApiInterface> requestStatusApiProvider;

  public UpcomingViewModel_MembersInjector(Provider<ApiInterface> requestStatusApiProvider) {
    this.requestStatusApiProvider = requestStatusApiProvider;
  }

  public static MembersInjector<UpcomingViewModel> create(
      Provider<ApiInterface> requestStatusApiProvider) {
    return new UpcomingViewModel_MembersInjector(requestStatusApiProvider);
  }

  @Override
  public void injectMembers(UpcomingViewModel instance) {
    injectRequestStatusApi(instance, requestStatusApiProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.viewmodels.UpcomingViewModel.requestStatusApi")
  @Named("status")
  public static void injectRequestStatusApi(UpcomingViewModel instance,
      ApiInterface requestStatusApi) {
    instance.requestStatusApi = requestStatusApi;
  }
}
