// Generated by Dagger (https://dagger.dev).
package com.streamsaw.di.module;

import com.streamsaw.ui.player.interfaces.VpaidClient;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideVpaidClientFactory implements Factory<VpaidClient> {
  private final AppModule module;

  public AppModule_ProvideVpaidClientFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public VpaidClient get() {
    return provideVpaidClient(module);
  }

  public static AppModule_ProvideVpaidClientFactory create(AppModule module) {
    return new AppModule_ProvideVpaidClientFactory(module);
  }

  public static VpaidClient provideVpaidClient(AppModule instance) {
    return Preconditions.checkNotNull(instance.provideVpaidClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
