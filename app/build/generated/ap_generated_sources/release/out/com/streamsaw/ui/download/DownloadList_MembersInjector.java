// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.download;

import androidx.lifecycle.ViewModelProvider;
import com.streamsaw.data.repository.MediaRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DownloadList_MembersInjector implements MembersInjector<DownloadList> {
  private final Provider<MediaRepository> mediaRepositoryProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public DownloadList_MembersInjector(Provider<MediaRepository> mediaRepositoryProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.mediaRepositoryProvider = mediaRepositoryProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<DownloadList> create(
      Provider<MediaRepository> mediaRepositoryProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new DownloadList_MembersInjector(mediaRepositoryProvider, viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(DownloadList instance) {
    injectMediaRepository(instance, mediaRepositoryProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.download.DownloadList.mediaRepository")
  public static void injectMediaRepository(DownloadList instance, MediaRepository mediaRepository) {
    instance.mediaRepository = mediaRepository;
  }

  @InjectedFieldSignature("com.streamsaw.ui.download.DownloadList.viewModelFactory")
  public static void injectViewModelFactory(DownloadList instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
