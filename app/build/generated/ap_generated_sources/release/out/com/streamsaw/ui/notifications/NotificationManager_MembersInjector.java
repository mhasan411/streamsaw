// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.notifications;

import com.streamsaw.data.repository.AnimeRepository;
import com.streamsaw.data.repository.MediaRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationManager_MembersInjector implements MembersInjector<NotificationManager> {
  private final Provider<MediaRepository> repositoryProvider;

  private final Provider<AnimeRepository> animeRepositoryProvider;

  public NotificationManager_MembersInjector(Provider<MediaRepository> repositoryProvider,
      Provider<AnimeRepository> animeRepositoryProvider) {
    this.repositoryProvider = repositoryProvider;
    this.animeRepositoryProvider = animeRepositoryProvider;
  }

  public static MembersInjector<NotificationManager> create(
      Provider<MediaRepository> repositoryProvider,
      Provider<AnimeRepository> animeRepositoryProvider) {
    return new NotificationManager_MembersInjector(repositoryProvider, animeRepositoryProvider);
  }

  @Override
  public void injectMembers(NotificationManager instance) {
    injectRepository(instance, repositoryProvider.get());
    injectAnimeRepository(instance, animeRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.notifications.NotificationManager.repository")
  public static void injectRepository(NotificationManager instance, MediaRepository repository) {
    instance.repository = repository;
  }

  @InjectedFieldSignature("com.streamsaw.ui.notifications.NotificationManager.animeRepository")
  public static void injectAnimeRepository(NotificationManager instance,
      AnimeRepository animeRepository) {
    instance.animeRepository = animeRepository;
  }
}
