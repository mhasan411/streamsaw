// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.player.activities;

import android.content.SharedPreferences;
import com.streamsaw.data.repository.MediaRepository;
import com.streamsaw.data.repository.SettingsRepository;
import com.streamsaw.ui.manager.AdsManager;
import com.streamsaw.ui.manager.AuthManager;
import com.streamsaw.ui.manager.SettingsManager;
import com.streamsaw.ui.player.controller.PlayerUIController;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EasyPlexPlayerActivity_MembersInjector implements MembersInjector<EasyPlexPlayerActivity> {
  private final Provider<PlayerUIController> playerUIControllerProvider;

  private final Provider<AdsManager> adsManagerProvider;

  private final Provider<SettingsManager> settingsManagerProvider;

  private final Provider<AuthManager> authManagerProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<SettingsRepository> settingsRepositoryProvider;

  private final Provider<SettingsRepository> authRepositoryProvider;

  private final Provider<MediaRepository> mediaRepositoryProvider;

  public EasyPlexPlayerActivity_MembersInjector(
      Provider<PlayerUIController> playerUIControllerProvider,
      Provider<AdsManager> adsManagerProvider, Provider<SettingsManager> settingsManagerProvider,
      Provider<AuthManager> authManagerProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SettingsRepository> settingsRepositoryProvider,
      Provider<SettingsRepository> authRepositoryProvider,
      Provider<MediaRepository> mediaRepositoryProvider) {
    this.playerUIControllerProvider = playerUIControllerProvider;
    this.adsManagerProvider = adsManagerProvider;
    this.settingsManagerProvider = settingsManagerProvider;
    this.authManagerProvider = authManagerProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.settingsRepositoryProvider = settingsRepositoryProvider;
    this.authRepositoryProvider = authRepositoryProvider;
    this.mediaRepositoryProvider = mediaRepositoryProvider;
  }

  public static MembersInjector<EasyPlexPlayerActivity> create(
      Provider<PlayerUIController> playerUIControllerProvider,
      Provider<AdsManager> adsManagerProvider, Provider<SettingsManager> settingsManagerProvider,
      Provider<AuthManager> authManagerProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SettingsRepository> settingsRepositoryProvider,
      Provider<SettingsRepository> authRepositoryProvider,
      Provider<MediaRepository> mediaRepositoryProvider) {
    return new EasyPlexPlayerActivity_MembersInjector(playerUIControllerProvider, adsManagerProvider, settingsManagerProvider, authManagerProvider, sharedPreferencesProvider, settingsRepositoryProvider, authRepositoryProvider, mediaRepositoryProvider);
  }

  @Override
  public void injectMembers(EasyPlexPlayerActivity instance) {
    injectPlayerUIController(instance, playerUIControllerProvider.get());
    injectAdsManager(instance, adsManagerProvider.get());
    injectSettingsManager(instance, settingsManagerProvider.get());
    injectAuthManager(instance, authManagerProvider.get());
    injectSharedPreferences(instance, sharedPreferencesProvider.get());
    injectSettingsRepository(instance, settingsRepositoryProvider.get());
    injectAuthRepository(instance, authRepositoryProvider.get());
    injectMediaRepository(instance, mediaRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.playerUIController")
  public static void injectPlayerUIController(EasyPlexPlayerActivity instance,
      PlayerUIController playerUIController) {
    instance.playerUIController = playerUIController;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.adsManager")
  public static void injectAdsManager(EasyPlexPlayerActivity instance, AdsManager adsManager) {
    instance.adsManager = adsManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.settingsManager")
  public static void injectSettingsManager(EasyPlexPlayerActivity instance,
      SettingsManager settingsManager) {
    instance.settingsManager = settingsManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.authManager")
  public static void injectAuthManager(EasyPlexPlayerActivity instance, AuthManager authManager) {
    instance.authManager = authManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.sharedPreferences")
  public static void injectSharedPreferences(EasyPlexPlayerActivity instance,
      SharedPreferences sharedPreferences) {
    instance.sharedPreferences = sharedPreferences;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.settingsRepository")
  public static void injectSettingsRepository(EasyPlexPlayerActivity instance,
      SettingsRepository settingsRepository) {
    instance.settingsRepository = settingsRepository;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.authRepository")
  public static void injectAuthRepository(EasyPlexPlayerActivity instance,
      SettingsRepository authRepository) {
    instance.authRepository = authRepository;
  }

  @InjectedFieldSignature("com.streamsaw.ui.player.activities.EasyPlexPlayerActivity.mediaRepository")
  public static void injectMediaRepository(EasyPlexPlayerActivity instance,
      MediaRepository mediaRepository) {
    instance.mediaRepository = mediaRepository;
  }
}
