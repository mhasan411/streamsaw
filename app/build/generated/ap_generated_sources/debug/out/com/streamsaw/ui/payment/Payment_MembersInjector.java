// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.payment;

import androidx.lifecycle.ViewModelProvider;
import com.streamsaw.ui.manager.SettingsManager;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Payment_MembersInjector implements MembersInjector<Payment> {
  private final Provider<SettingsManager> settingsManagerProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public Payment_MembersInjector(Provider<SettingsManager> settingsManagerProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.settingsManagerProvider = settingsManagerProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<Payment> create(Provider<SettingsManager> settingsManagerProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new Payment_MembersInjector(settingsManagerProvider, viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(Payment instance) {
    injectSettingsManager(instance, settingsManagerProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.payment.Payment.settingsManager")
  public static void injectSettingsManager(Payment instance, SettingsManager settingsManager) {
    instance.settingsManager = settingsManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.payment.Payment.viewModelFactory")
  public static void injectViewModelFactory(Payment instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
