// Generated by Dagger (https://dagger.dev).
package com.streamsaw.di.module;

import com.streamsaw.data.local.EasyPlexDatabase;
import com.streamsaw.data.local.dao.HistoryDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideHistoryDaoFactory implements Factory<HistoryDao> {
  private final AppModule module;

  private final Provider<EasyPlexDatabase> dbProvider;

  public AppModule_ProvideHistoryDaoFactory(AppModule module,
      Provider<EasyPlexDatabase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public HistoryDao get() {
    return provideHistoryDao(module, dbProvider.get());
  }

  public static AppModule_ProvideHistoryDaoFactory create(AppModule module,
      Provider<EasyPlexDatabase> dbProvider) {
    return new AppModule_ProvideHistoryDaoFactory(module, dbProvider);
  }

  public static HistoryDao provideHistoryDao(AppModule instance, EasyPlexDatabase db) {
    return Preconditions.checkNotNull(instance.provideHistoryDao(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
