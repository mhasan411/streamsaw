// Generated by Dagger (https://dagger.dev).
package com.streamsaw.ui.moviedetails;

import android.content.SharedPreferences;
import androidx.lifecycle.ViewModelProvider;
import com.streamsaw.data.repository.SettingsRepository;
import com.streamsaw.ui.manager.AuthManager;
import com.streamsaw.ui.manager.SettingsManager;
import com.streamsaw.ui.manager.TokenManager;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieDetailsActivity_MembersInjector implements MembersInjector<MovieDetailsActivity> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<SettingsManager> settingsManagerProvider;

  private final Provider<SettingsRepository> authRepositoryProvider;

  private final Provider<AuthManager> authManagerProvider;

  private final Provider<TokenManager> tokenManagerProvider;

  public MovieDetailsActivity_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SettingsManager> settingsManagerProvider,
      Provider<SettingsRepository> authRepositoryProvider,
      Provider<AuthManager> authManagerProvider, Provider<TokenManager> tokenManagerProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.settingsManagerProvider = settingsManagerProvider;
    this.authRepositoryProvider = authRepositoryProvider;
    this.authManagerProvider = authManagerProvider;
    this.tokenManagerProvider = tokenManagerProvider;
  }

  public static MembersInjector<MovieDetailsActivity> create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SettingsManager> settingsManagerProvider,
      Provider<SettingsRepository> authRepositoryProvider,
      Provider<AuthManager> authManagerProvider, Provider<TokenManager> tokenManagerProvider) {
    return new MovieDetailsActivity_MembersInjector(viewModelFactoryProvider, sharedPreferencesProvider, settingsManagerProvider, authRepositoryProvider, authManagerProvider, tokenManagerProvider);
  }

  @Override
  public void injectMembers(MovieDetailsActivity instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectSharedPreferences(instance, sharedPreferencesProvider.get());
    injectSettingsManager(instance, settingsManagerProvider.get());
    injectAuthRepository(instance, authRepositoryProvider.get());
    injectAuthManager(instance, authManagerProvider.get());
    injectTokenManager(instance, tokenManagerProvider.get());
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.viewModelFactory")
  public static void injectViewModelFactory(MovieDetailsActivity instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.sharedPreferences")
  public static void injectSharedPreferences(MovieDetailsActivity instance,
      SharedPreferences sharedPreferences) {
    instance.sharedPreferences = sharedPreferences;
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.settingsManager")
  public static void injectSettingsManager(MovieDetailsActivity instance,
      SettingsManager settingsManager) {
    instance.settingsManager = settingsManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.authRepository")
  public static void injectAuthRepository(MovieDetailsActivity instance,
      SettingsRepository authRepository) {
    instance.authRepository = authRepository;
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.authManager")
  public static void injectAuthManager(MovieDetailsActivity instance, AuthManager authManager) {
    instance.authManager = authManager;
  }

  @InjectedFieldSignature("com.streamsaw.ui.moviedetails.MovieDetailsActivity.tokenManager")
  public static void injectTokenManager(MovieDetailsActivity instance, TokenManager tokenManager) {
    instance.tokenManager = tokenManager;
  }
}
